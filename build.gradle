plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'

    // KAFKA
    id "com.github.davidmc24.gradle.plugin.avro" version "1.2.0"
    id "idea"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
    maven {
        url "https://packages.confluent.io/maven"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    //KAFKA 설정
    implementation 'org.springframework.kafka:spring-kafka'
    testImplementation 'org.springframework.kafka:spring-kafka-test'

    // Kafka Avro Serializer/Deserializer
    implementation "io.confluent:kafka-avro-serializer:6.1.0"

    // Apache Avro
    implementation 'org.apache.avro:avro:1.10.2'
}

tasks.named('test') {
    useJUnitPlatform()
}
//
//task generateAvro(type: Exec) {
//    description = 'Generates Java classes from Avro schema.'
//    group = 'build'
//
//    inputs.dir file('src/main/resources/avro')
//    outputs.dir layout.buildDirectory.dir("generated-sources/avro")
//
//    commandLine 'java', '-jar', 'path/to/avro-tools-1.12.0.jar', 'compile', 'schema',
//            'src/main/resources/avro',
//            layout.buildDirectory.dir("generated-sources/avro").get().asFile.absolutePath
//}
//
//sourceSets {
//    main {
//        java {
//            srcDir layout.buildDirectory.dir("generated-sources/avro")
//        }
//    }
//}